(library
 (name top_printers)
 (public_name coq-core.top_printers)
 (synopsis "Coq's Debug Printers")
 (wrapped false)
 (modules top_printers)
 (optional)
 (libraries coq-core.toplevel coq-core.plugins.ltac))

(rule
  (targets dune-dbg)
  (deps
    dune-dbg.in
    ../checker/coqchk.bc
    ../topbin/coqc_bin.bc
    ../topbin/coqnative_bin.bc
    ../ide/coqide/coqide_main.bc
    ../tools/coqdep/coqdep.bc
    ; We require all the OCaml libs to be in place and searchable
    ; by OCamlfind, this is a bit of a hack but until Dune gets
    ; proper ocamldebug support we have to live with that.
    %{lib:coq-core.config:config.cma}
    %{lib:coq-core.clib:clib.cma}
    %{lib:coq-core.lib:lib.cma}
    %{lib:coq-core.kernel:kernel.cma}
    %{lib:coq-core.vm:coqrun.cma}
    %{lib:coq-core.vm:../../stublibs/dllcoqrun_stubs.so}
    %{lib:coq-core.library:library.cma}
    %{lib:coq-core.engine:engine.cma}
    %{lib:coq-core.pretyping:pretyping.cma}
    %{lib:coq-core.gramlib:gramlib.cma}
    %{lib:coq-core.interp:interp.cma}
    %{lib:coq-core.proofs:proofs.cma}
    %{lib:coq-core.parsing:parsing.cma}
    %{lib:coq-core.printing:printing.cma}
    %{lib:coq-core.tactics:tactics.cma}
    %{lib:coq-core.vernac:vernac.cma}
    %{lib:coq-core.stm:stm.cma}
    %{lib:coq-core.sysinit:sysinit.cma}
    %{lib:coq-core.toplevel:toplevel.cma}
    %{lib:coq-core.plugins.ltac:ltac_plugin.cma}
    %{lib:coq-core.top_printers:top_printers.cmi}
    %{lib:coq-core.top_printers:top_printers.cma}
    %{lib:coq-core.top_printers:../META})
  (action (copy dune-dbg.in dune-dbg)))

(alias
 (name ml_toplevel_files)
 (deps
  (glob_files top_printers.*)
  (glob_files vm_printers.*)
  (glob_files ml_toplevel/**)))

(install
 (section lib)
 (package coq-core)
 (files
  (top_printers.mli as dev/top_printers.mli)
  (top_printers.ml as dev/top_printers.ml)
  (vm_printers.ml as dev/vm_printers.ml)
  (ml_toplevel/include as dev/ml_toplevel/include)
  (ml_toplevel/include_directories as dev/ml_toplevel/include_directories)
  (ml_toplevel/include_printers as dev/ml_toplevel/include_printers)
  (ml_toplevel/include_utilities as dev/ml_toplevel/include_utilities)))
; TODO: the above can be written as follow:
;         (files
;          (glob_files (top_printers.* with_prefix dev))
;          (glob_files (vm_printers.* with_prefix dev))
;          (glob_files (ml_toplevel/** with_prefix dev)))
;       , but this is only possible with dune language 3.11 or later
